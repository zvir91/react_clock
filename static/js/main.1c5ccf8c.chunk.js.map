{"version":3,"sources":["App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","App","state","hasClock","clockName","today","consoleInfoInterval","this","printInfo","setState","getTime","timerId","clearInterval","window","setInterval","console","info","document","addEventListener","event","preventDefault","className","toUTCString","React","Component","ReactDOM","render","getElementById"],"mappings":"sNAGA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GAUX,IAAMK,EAAb,4MACEC,MAAQ,CACNC,UAAU,EACVC,UAAW,UACXC,MAAO,IAAIR,KACXS,oBAAqB,MALzB,uDAmBE,WACE,GAAIC,KAAKL,MAAMC,SAAU,CACvB,IAAMG,EAAsBC,KAAKC,YAEjCD,KAAKE,SAAS,CAAEH,wBAKlBC,KAAKG,UACLH,KAAKI,YA7BT,kCAkCE,YACOJ,KAAKL,MAAMC,UAAYI,KAAKL,MAAMI,sBACrCM,cAAcL,KAAKL,MAAMI,qBACzBC,KAAKE,SAAS,CAAEH,oBAAqB,UArC3C,qBAyCE,WAAW,IAAD,OAKR,OAJaO,OAAOC,aAAY,WAC9B,EAAKL,SAAS,CAAEJ,MAAO,IAAIR,SAC1B,OA5CP,qBAiDE,WAAW,IAAD,OACR,OAAOgB,OAAOC,aAAY,WACxB,EAAKL,SAAS,CAAEL,UAAWT,QAC1B,QApDP,uBAuDE,WAAa,IAAD,OACV,OAAIY,KAAKL,MAAMC,SACNU,OAAOC,aAAY,WAExBC,QAAQC,KAAK,EAAKd,MAAMG,SACvB,KAGE,OA/DX,oBAkEE,WAAU,IAAD,OACP,EAAuCE,KAAKL,MAApCG,EAAR,EAAQA,MAAOF,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,UAWzB,OATAa,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKX,SAAS,CAAEN,UAAU,OAG5Bc,SAASC,iBAAiB,SAAS,WACjC,EAAKT,SAAS,CAAEN,UAAU,OAI1B,sBAAKkB,UAAU,MAAf,UACE,6CAEClB,GACC,sBAAKkB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGjB,IAGF,YAED,sBAAMiB,UAAU,cAAhB,SACGhB,EAAMiB,cAActB,OAAO,IAAK,eA3F/C,GAAyBuB,IAAMC,WCb/BC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.1c5ccf8c.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ninterface AppState {\n  hasClock: boolean;\n  clockName: string;\n  today: Date;\n  consoleInfoInterval: number | null;\n}\n\nexport class App extends React.Component<{}, AppState> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n    today: new Date(),\n    consoleInfoInterval: null,\n    // this.timerId\n  };\n  // const today = new Date();\n  // let clockName = 'Clock-0';\n\n  // This code starts a timer\n  // componentDidMount();\n\n  // this code stops the timer\n  //\n\n  // window.clearInterval(timerId);\n\n  componentDidMount() {\n    if (this.state.hasClock) {\n      const consoleInfoInterval = this.printInfo();\n\n      this.setState({ consoleInfoInterval });\n    }\n\n    // this.printInfo();\n\n    this.getTime();\n    this.timerId();\n\n    // this.setState({ consoleInfoInterval });\n  }\n\n  componentWillUnmount() {\n    if (!this.state.hasClock && this.state.consoleInfoInterval) {\n      clearInterval(this.state.consoleInfoInterval);\n      this.setState({ consoleInfoInterval: null });\n    }\n  }\n\n  getTime() {\n    const time = window.setInterval(() => {\n      this.setState({ today: new Date() });\n    }, 1000);\n\n    return time;\n  }\n\n  timerId() {\n    return window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  printInfo() {\n    if (this.state.hasClock) {\n      return window.setInterval(() => {\n        // eslint-disable-next-line no-console\n        console.info(this.state.today);\n      }, 1000);\n    }\n\n    return null;\n  }\n\n  render() {\n    const { today, hasClock, clockName } = this.state;\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock && (\n          <div className=\"Clock\">\n            <strong className=\"Clock__name\">\n              {clockName}\n            </strong>\n\n            {' time is '}\n\n            <span className=\"Clock__time\">\n              {today.toUTCString().slice(-12, -4)}\n            </span>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}