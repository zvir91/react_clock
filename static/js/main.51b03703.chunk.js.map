{"version":3,"sources":["Clock/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","consoleinfointerval","this","printInfo","prevProps","clockName","props","console","debug","window","clearInterval","setState","info","setInterval","today","className","toUTCString","slice","React","PureComponent","getRandomName","value","Date","now","toString","App","hasClock","timerId","setTime","document","addEventListener","event","preventDefault","Component","ReactDOM","render","getElementById"],"mappings":"sNAYaA,EAAb,4MACEC,MAAQ,CACNC,oBAAqB,MAFzB,uDAKE,WACEC,KAAKC,cANT,gCASE,SAAmBC,GACbA,EAAUC,YAAcH,KAAKI,MAAMD,WAErCE,QAAQC,MAAR,uBAA8BJ,EAAUC,UAAxC,eAAwDH,KAAKI,MAAMD,cAZzE,kCAgBE,WACyC,OAAnCH,KAAKF,MAAMC,sBACbQ,OAAOC,cAAcR,KAAKF,MAAMC,qBAChCC,KAAKS,SAAS,CAAEV,oBAAqB,UAnB3C,uBAuBE,WAAa,IAAD,OACJW,EAAOH,OAAOI,aAAY,WAE9BN,QAAQK,KAAK,EAAKN,MAAMQ,SACvB,KAEHZ,KAAKS,SAAS,CAAEV,oBAAqBW,MA7BzC,oBAgCE,WACE,MAA6BV,KAAKI,MAA1BD,EAAR,EAAQA,UAAWS,EAAnB,EAAmBA,MAEnB,OACE,sBAAKC,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGV,IAGF,YAED,sBAAMU,UAAU,cAAhB,SACGD,EAAME,cAAcC,OAAO,IAAK,YA5C3C,GAA2BC,IAAMC,eCFjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWP,OAAO,GAE3C,MAAM,SAAN,OAAgBI,GAGX,IAAMI,EAAb,4MACEzB,MAAQ,CACN0B,UAAU,EACVrB,UAAW,UACXS,MAAO,IAAIQ,MAJf,uDAOE,WACEpB,KAAKyB,UACLzB,KAAK0B,YATT,kCAYE,WACEnB,OAAOC,cAAcR,KAAKyB,WAC1BlB,OAAOC,cAAcR,KAAK0B,aAd9B,qBAiBE,WAAW,IAAD,OACR,OAAOnB,OAAOI,aAAY,WACxB,EAAKF,SAAS,CAAEG,MAAO,IAAIQ,SAC1B,OApBP,qBAuBE,WAAW,IAAD,OACR,OAAOb,OAAOI,aAAY,WACxB,EAAKF,SAAS,CAAEN,UAAWe,QAC1B,QA1BP,oBA6BE,WAAU,IAAD,OACP,EAIIlB,KAAKF,MAHP0B,EADF,EACEA,SACArB,EAFF,EAEEA,UACAS,EAHF,EAGEA,MAYF,OATAe,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKrB,SAAS,CAAEe,UAAU,OAG5BG,SAASC,iBAAiB,SAAS,WACjC,EAAKnB,SAAS,CAAEe,UAAU,OAI1B,sBAAKX,UAAU,MAAf,UACE,6CAECW,GAEC,cAAC,EAAD,CACErB,UAAWA,EACXS,MAAOA,EACPY,SAAUA,WAtDtB,GAAyBR,IAAMe,WCb/BC,IAASC,OACP,cAAC,EAAD,IACAN,SAASO,eAAe,W","file":"static/js/main.51b03703.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  today: Date,\n  clockName: string,\n  hasClock: boolean,\n}\n\ninterface ClockState {\n  consoleinfointerval: null | number,\n}\n\nexport class Clock extends React.PureComponent<Props, ClockState> {\n  state = {\n    consoleinfointerval: null,\n  };\n\n  componentDidMount(): void {\n    this.printInfo();\n  }\n\n  componentDidUpdate(prevProps: Props): void {\n    if (prevProps.clockName !== this.props.clockName) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.clockName} to ${this.props.clockName}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.consoleinfointerval !== null) {\n      window.clearInterval(this.state.consoleinfointerval);\n      this.setState({ consoleinfointerval: null });\n    }\n  }\n\n  printInfo() {\n    const info = window.setInterval(() => {\n      // eslint-disable-next-line no-console\n      console.info(this.props.today);\n    }, 1000);\n\n    this.setState({ consoleinfointerval: info });\n  }\n\n  render() {\n    const { clockName, today } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock/Clock';\n\nexport interface AppState {\n  hasClock: boolean;\n  clockName: string;\n  today: Date;\n}\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component<{}, AppState> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n    today: new Date(),\n  };\n\n  componentDidMount(): void {\n    this.timerId();\n    this.setTime();\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.timerId());\n    window.clearInterval(this.setTime());\n  }\n\n  setTime() {\n    return window.setInterval(() => {\n      this.setState({ today: new Date() });\n    }, 1000);\n  }\n\n  timerId() {\n    return window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  render() {\n    const {\n      hasClock,\n      clockName,\n      today,\n    } = this.state;\n\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock\n        && (\n          <Clock\n            clockName={clockName}\n            today={today}\n            hasClock={hasClock}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}